services:
  courses:
    build:
      context: .
      args:
        - APP=courses
    restart: always
    ports:
      - 3003:3000
    depends_on: 
      - coursesDB

  usersDB:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: user
      MONGO_INITDB_DATABASE: usersDB
    ports:
      - '27017:27017' # Mapping MongoDB to the default port 27017
    volumes:
      - userdata:/data/db # Mounting volume for usersDB data

  coursesDB:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: meta
      MONGO_INITDB_ROOT_PASSWORD: meta
      MONGO_INITDB_DATABASE: coursesDB
    ports:
      - '27018:27017' # Mapping host port 27018 to container port 27017
    volumes:
      - metadata:/data/db # Mounting volume for courseDB data

volumes:
  userdata:
    driver: local
  metadata:
    driver: local
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5

